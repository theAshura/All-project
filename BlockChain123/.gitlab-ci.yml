stages:
  - build

.before_script_template: &before_script_template
  before_script:
    - 'which ssh-agent || ( apk add --update openssh )'
    - apk update && apk add --no-cache bash git
    - eval "$(ssh-agent -s)"
    - if [ "$CI_COMMIT_BRANCH" == "deployment/web-dev" ]; then ENV="dev"; fi
    - if [ "$CI_COMMIT_BRANCH" == "deployment/web-dev" ];
      then
      echo "$SSH_PRIVATE_KEY_DEV" | tr -d '\r' | ssh-add - > /dev/null;
      fi
    - if [ "$CI_COMMIT_BRANCH" == "deployment/web-staging" ]; then ENV="staging"; fi
    - if [ "$CI_COMMIT_BRANCH" == "deployment/web-staging" ];
      then
      echo "$SSH_PRIVATE_KEY_STAGING" | tr -d '\r' | ssh-add - > /dev/null;
      fi

    - ssh-add -l

.script_template: &script_template
  script:
    - VERSION=$ENV-$(git rev-parse --short HEAD)
    - yarn
    - yarn build:web:$ENV

    # remove old build folder on AWS S3
    - echo "s3://sdc2-deployment/vmo22142/build/$ENV"
    - aws s3 rm s3://sdc2-deployment/vmo22142/build/$ENV --recursive

    # sync build folder from docker to aws s3
    - aws s3 sync ./dist/apps/vmo-rental-webapp s3://sdc2-deployment/vmo22142/build/$ENV
    - aws s3 sync ./dist/apps/vmo-rental-webapp s3://sdc2-deployment/vmo22142/build/$VERSION

    - echo "projects/namo-frontend-$ENV/script"
    # ssh to server
    - ssh -oStrictHostKeyChecking=no $USER@$HOST "cd projects/du2-renting-fe-$ENV/script && git pull && ./$ENV.sh"

.rules_template: &rules_template
  rules:
    - if: '$CI_COMMIT_BRANCH == "deployment/web-dev" || $CI_COMMIT_BRANCH == "deployment/web-staging"'
      when: on_success
    - if: '$CI_COMMIT_BRANCH != "deployment/web-dev" || $CI_COMMIT_BRANCH != "deployment/web-staging"'
      when: never

.caching_template: &caching_template
  cache:
    key:
      files:
        - package.json
    paths:
      - node_modules/
    # https://docs.gitlab.com/ee/ci/yaml/#cachepolicy
    policy: pull-push

deploy-service:
  stage: build
  tags:
    - vops-runner
  image:
    name: public.ecr.aws/v2n6y1u7/ci-node:v14-gitops
  services:
    - docker:stable-dind
  variables:
    # common variable
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ''
  <<: *before_script_template
  <<: *script_template
  <<: *caching_template
  <<: *rules_template
  artifacts:
    paths:
      - dist
